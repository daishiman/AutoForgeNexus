services:
  # ===================
  # Backend API Service
  # ===================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: autoforge-backend-dev
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=local
      - HOST=0.0.0.0
      - PORT=8000
      - DATABASE_URL=sqlite:///./data/dev.db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - DEBUG=true
      - PYTHONUNBUFFERED=1
      # Clerk認証（後で設定）
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY:-}
      # LLMプロバイダー（後で設定）
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
    volumes:
      - ./backend:/app
      - backend-data:/app/data
      # Python仮想環境の永続化
      - backend-venv:/app/venv
    depends_on:
      - redis
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - autoforge-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ===================
  # Frontend Service
  # ===================
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: autoforge-frontend-dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:8000/api/v1
      # Clerk認証（後で設定）
      - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY:-}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY:-}
    volumes:
      - ./frontend:/app
      # node_modulesは除外（コンテナ内で管理）
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    command: pnpm dev
    networks:
      - autoforge-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ===================
  # Redis Cache Service
  # ===================
  redis:
    image: redis:7.4-alpine
    container_name: autoforge-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - autoforge-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # ===================
  # Database Service (Turso用のローカル代替)
  # ===================
  # 注: 開発環境ではSQLiteを使用。本番環境ではTursoを使用
  # TursoのローカルエミュレーターはDockerイメージがないため、
  # バックエンドのSQLiteで代用

  # ===================
  # Monitoring Stack (Optional)
  # ===================
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: autoforge-prometheus-dev
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheus-data:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #   networks:
  #     - autoforge-network
  #   restart: unless-stopped

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: autoforge-grafana-dev
  #   ports:
  #     - "3001:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #     - GF_INSTALL_PLUGINS=redis-datasource
  #   volumes:
  #     - grafana-data:/var/lib/grafana
  #     - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
  #   depends_on:
  #     - prometheus
  #   networks:
  #     - autoforge-network
  #   restart: unless-stopped

# ===================
# Networks
# ===================
networks:
  autoforge-network:
    driver: bridge
    name: autoforge-network

# ===================
# Volumes
# ===================
volumes:
  backend-data:
    name: autoforge-backend-data
  backend-venv:
    name: autoforge-backend-venv
  redis-data:
    name: autoforge-redis-data
  # prometheus-data:
  #   name: autoforge-prometheus-data
  # grafana-data:
  #   name: autoforge-grafana-data
