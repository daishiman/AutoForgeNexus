name: "共有Node.js環境セットアップ"
# キャッシング機能付きNode.js + pnpm環境の再利用可能なワークフロー

on:
  workflow_call:
    inputs:
      node-version:
        description: "セットアップするNode.jsバージョン"
        required: false
        default: "22"
        type: string
      pnpm-version:
        description: "セットアップするpnpmバージョン"
        required: false
        default: "9"
        type: string
      working-directory:
        description: "Node.js操作用の作業ディレクトリ"
        required: false
        default: "./frontend"
        type: string
      cache-key-suffix:
        description: "キャッシュキーの追加サフィックス"
        required: false
        default: ""
        type: string
      install-playwright:
        description: "Playwrightブラウザのインストール"
        required: false
        default: false
        type: boolean

jobs:
  setup-node:
    name: Node.js環境セットアップ
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache-deps.outputs.cache-hit }}
      node-cache-key: ${{ steps.cache-key.outputs.key }}

    steps:
      - name: 📥 コードのチェックアウト
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          persist-credentials: false

      - name: 📦 pnpmセットアップ
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
        with:
          version: ${{ inputs.pnpm-version }}

      - name: 🟢 Node.jsセットアップ
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: ${{ inputs.node-version }}
          cache: "pnpm"
          cache-dependency-path: ${{ inputs.working-directory }}/pnpm-lock.yaml

      - name: 🔑 キャッシュキー生成
        id: cache-key
        run: |
          LOCKFILE_HASH=$(sha256sum ${{ inputs.working-directory }}/pnpm-lock.yaml | cut -d' ' -f1)
          CACHE_KEY="node-${{ inputs.node-version }}-pnpm-${{ inputs.pnpm-version }}-${{ runner.os }}-${LOCKFILE_HASH}${{ inputs.cache-key-suffix }}"
          echo "key=${CACHE_KEY}" >> $GITHUB_OUTPUT
          echo "生成されたキャッシュキー: ${CACHE_KEY}"

      - name: 📦 pnpmストアディレクトリ取得
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: 📦 pnpm依存関係のキャッシュ
        id: cache-deps
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: |
            ${{ env.STORE_PATH }}
            ${{ inputs.working-directory }}/node_modules
          key: ${{ steps.cache-key.outputs.key }}
          restore-keys: |
            node-${{ inputs.node-version }}-pnpm-${{ inputs.pnpm-version }}-${{ runner.os }}-

      - name: 📦 依存関係のインストール
        if: steps.cache-deps.outputs.cache-hit != 'true'
        working-directory: ${{ inputs.working-directory }}
        run: |
          pnpm install --frozen-lockfile --prefer-offline

      - name: 🎭 Playwrightブラウザのインストール
        if: inputs.install-playwright == 'true' && steps.cache-deps.outputs.cache-hit != 'true'
        working-directory: ${{ inputs.working-directory }}
        run: |
          pnpm exec playwright install --with-deps chromium

      - name: 📤 Node.js環境のアップロード
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6
        with:
          name: node-env-${{ github.run_id }}
          path: |
            ${{ inputs.working-directory }}/node_modules
            ~/.cache/ms-playwright
          retention-days: 1
